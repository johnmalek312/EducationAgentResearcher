name: Deploy Flask App to AWS Elastic Beanstalk

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set Up Python 3.12
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"
    
      - name: Install AWS CLI, Elastic Beanstalk CLI, and Dependencies
        run: pip install --upgrade awscli awsebcli botocore
        
      - name: Configure AWS Credentials
        run: |
          mkdir -p ~/.aws
          echo "[default]" > ~/.aws/credentials
          echo "aws_access_key_id = ${{ secrets.AWS_ACCESS_KEY_ID }}" >> ~/.aws/credentials
          echo "aws_secret_access_key = ${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> ~/.aws/credentials
          echo "[default]" > ~/.aws/config
          echo "region = ${{ secrets.AWS_REGION }}" >> ~/.aws/config

      - name: Recreate .env File from GitHub Secrets
        run: |
          echo "GOOGLE_API_KEY=${{ secrets.GOOGLE_API_KEY }}" > .env
          echo "OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}" >> .env
          echo "TAVILY_API_KEY=${{ secrets.TAVILY_API_KEY }}" >> .env

      - name: Verify requirements.txt exists
        run: |
          ls -la
          if [ ! -f "requirements.txt" ]; then
            echo "Error: requirements.txt not found"
            exit 1
          fi

      - name: Initialize Elastic Beanstalk (If Needed)
        run: |
          if [ ! -d ".elasticbeanstalk" ]; then
            eb init -p python-3.12 EducationAgentResearcher --region ${{ secrets.AWS_REGION }}
          fi

      - name: Create EB config.yml if needed
        run: |
          mkdir -p .elasticbeanstalk
          cat > .elasticbeanstalk/config.yml << EOF
          branch-defaults:
            main:
              environment: EducationAgentEnv
          global:
            application_name: EducationAgentResearcher
            default_platform: Python 3.12
            default_region: ${{ secrets.AWS_REGION }}
            sc: git
          EOF

      - name: Check if Environment Exists
        id: check_env
        run: |
          if aws elasticbeanstalk describe-environments --application-name EducationAgentResearcher --query "Environments[?EnvironmentName=='EducationAgentEnv'].EnvironmentName" --output text | grep -q 'EducationAgentEnv'; then
            echo "env_exists=true" >> $GITHUB_OUTPUT
          else
            echo "env_exists=false" >> $GITHUB_OUTPUT
          fi

      - name: Create Environment (If Needed)
        if: steps.check_env.outputs.env_exists != 'true'
        run: eb create EducationAgentEnv --region ${{ secrets.AWS_REGION }}

      - name: Deploy to Elastic Beanstalk
        run: eb deploy EducationAgentEnv --region ${{ secrets.AWS_REGION }}